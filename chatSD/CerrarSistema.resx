<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>